{"version":3,"sources":["components/Preloader/preloader.module.scss","components/AppHeader/AppHeader.module.css","components/AppHeader/AppHeader.js","redux/store.js","HomeScreen/HomeScreen.jsx","navigation/RootRouter.jsx","App.js","serviceWorker.js","index.js","redux/photoReducer.js","components/Card/cardStyle.module.css","redux/favoritesReducer.js","redux/PhotosScreenReducer.js","components/InstagramLink/Instagram.module.css","components/Preloader/Preloader.jsx","components/Card/CardOverlay.jsx","components/Card/Card.jsx","components/Lists/CardList.js","redux/searchReducer.js","BLL/index.js","images/instagram.svg","components/InstagramLink/InstagramLink.jsx"],"names":["module","exports","AppHeader","className","styles","mainWrapper","exact","to","logoWrapper","activeClassName","icon","faHamsa","logoText","navigation","navigationButton","color","faSearch","faHeart","faHistory","persistConfig","key","storage","blacklist","rootReducer","combineReducers","search","searchReducer","favorites","favoritesReducer","photos","photoReducer","photosScreen","PhotosScreenReducer","persistedReducer","persistReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","HomeScreen","observer","React","createRef","setLastCardRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","props","increasePage","observe","undefined","this","allPhotos","fetchAllPhotos","CardList","data","Component","connect","state","console","log","dispatch","photoActions","SearchResultsScreen","lazy","SearchHistoryScreen","FavoritesScreen","PhotosScreen","RootRouter","fallback","Preloader","path","component","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","App","loading","href","title","target","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","_cp","types","fetchSuccess","type","page","UNAPI","resp","alert","initialState","currentPage","action","Set","actions","toggleFavorite","photoJson","deleteFavorite","photoID","favoritesList","total","isExisted","some","favoritesListItem","compareFavoritesItem","likedPhoto","isLiked","Object","assign","filter","favoritesItem","id","PhotosScreenActions","setCurrentPhoto","setCurrentPhotoPending","getPhoto","json","setCurrentPhotoSuccess","getRelatedPhotos","alt_description","photo","currentPhoto","keyword","getRelatedPhotosPending","searchPhotos","response","getRelatedPhotosSuccess","results","relatedPhotos","isRelatedPhotosPending","isCurrentPhotoPending","wrapper","class","loader","loader__bar","loader__ball","CardOverlay","viewPhoto","user","src","profile_image","medium","alt","InstagramLink","instagram_username","name","style","onClick","onViewPhoto","bind","faExpand","download","links","faDownload","Card","isImageLoaded","visibility","altDesc","setRef","ref","el","card","image","onLoad","setState","informationOverlay","favList","favorite","item","compareWithFavorites","elementType","disableImagesLoaded","updateOnEachImageLoad","map","index","length","urls","small","SEARCH_PENDING","SEARCH_SUCCESS","SEARCH_FAILURE","ADD_SEARCH_KEYWORD","searchActions","searchSuccsess","searchFailure","SEARCH_NO_MATHCES","searchPending","addSearchKeyword","doSearch","trim","search_keywords","search_results","is_pending","copyKeywords","push","unsplash","Unsplash","accessKey","toJson","listPhotos","downloadPhoto","listCollections","collections","_extends","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref3","_ref4","cx","cy","r","_ref","svgRef","enableBackground","height","viewBox","width","ForwardRef","forwardRef","isMobile","svg","InstagramLogo"],"mappings":"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","file":"static/js/main.26e6989b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"preloader_wrapper__1l-Ra\",\"loader\":\"preloader_loader__2o4hz\",\"loader__bar\":\"preloader_loader__bar__3havf\",\"barUp1\":\"preloader_barUp1__225xD\",\"barUp2\":\"preloader_barUp2__1l-ne\",\"barUp3\":\"preloader_barUp3__mm6cD\",\"barUp4\":\"preloader_barUp4__1hzwd\",\"barUp5\":\"preloader_barUp5__kMDjJ\",\"loader__ball\":\"preloader_loader__ball__dmJs1\",\"ball\":\"preloader_ball__QJqXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"AppHeader_mainWrapper__3Q9Kk\",\"logoWrapper\":\"AppHeader_logoWrapper__fa2m8\",\"logo\":\"AppHeader_logo__MYDYr\",\"logoText\":\"AppHeader_logoText__3mSMA\",\"navigation\":\"AppHeader_navigation__uD7xY\",\"navigationButton\":\"AppHeader_navigationButton__2peAD\"};","import React from \"react\";\r\nimport styles from \"./AppHeader.module.css\";\r\nimport \"./activeStyle.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHistory,\r\n  faSearch,\r\n  faHeart,\r\n  faHamsa,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <div className={styles.mainWrapper}>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={styles.logoWrapper}\r\n        // activeStyle={styles.active}\r\n        activeClassName=\"active\"\r\n      >\r\n        <FontAwesomeIcon icon={faHamsa} />\r\n        <span className={styles.logoText}>Resplash</span>\r\n      </NavLink>\r\n      <div className={styles.navigation}>\r\n        <NavLink\r\n          to=\"/search\"\r\n          className={styles.navigationButton}\r\n          // activeStyle={styles.active}\r\n          activeClassName=\"active\"\r\n        >\r\n          <FontAwesomeIcon color=\"white\" icon={faSearch} />\r\n          <span>Поиск</span>\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/favorites\"\r\n          className={styles.navigationButton}\r\n          // activeStyle={styles.active}\r\n          activeClassName=\"active\"\r\n        >\r\n          <FontAwesomeIcon color=\"white\" icon={faHeart} />\r\n          <span>Избранное</span>\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/history\"\r\n          className={styles.navigationButton}\r\n          // activeStyle={styles.active}\r\n          activeClassName=\"active\"\r\n        >\r\n          <FontAwesomeIcon color=\"white\" icon={faHistory} />\r\n          <span>История поиска</span>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { searchReducer } from \"./searchReducer\";\r\nimport { favoritesReducer } from \"./favoritesReducer\";\r\nimport { photoReducer } from \"./photoReducer\";\r\n//redux-persist. for saving state into localStorage\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { PhotosScreenReducer } from \"./PhotosScreenReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"photos\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  search: searchReducer,\r\n  favorites: favoritesReducer,\r\n  photos: photoReducer,\r\n  photosScreen: PhotosScreenReducer,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n  let store = createStore(\r\n    persistedReducer,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n  );\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React from \"react\";\r\nimport CardList from \"../components/Lists/CardList\";\r\nimport { connect } from \"react-redux\";\r\nimport { photoActions } from \"./../redux/photoReducer\";\r\n\r\nclass HomeScreen extends React.Component {\r\n  observer = React.createRef(); // текущий элемент\r\n  setLastCardRef = (node) => {\r\n    if (node === null) return;\r\n    if (this.observer.current) {\r\n      this.observer.current.disconnect();\r\n    }\r\n    this.observer.current = new IntersectionObserver((entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        this.props.increasePage();\r\n      }\r\n    });\r\n    if (node) this.observer.current.observe(node);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.allPhotos === undefined) {\r\n      this.props.fetchAllPhotos();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {(\r\n          <CardList\r\n            data={this.props.allPhotos}\r\n            setLastCardRef={this.setLastCardRef}\r\n          />\r\n        ) || \"ничего нет\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  console.log(\"STATE\", state);\r\n  return {\r\n    allPhotos: state.photos.allPhotos,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchAllPhotos: () => {\r\n      dispatch(photoActions.fetchAllPhotos());\r\n    },\r\n    increasePage: () => {\r\n      dispatch(photoActions.increasePage());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(HomeScreen);\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Preloader from \"../components/Preloader/Preloader\";\r\nimport HomeScreen from \"./../HomeScreen/HomeScreen\";\r\n// import SearchResultsScreen from \"../SearchScreen/SearchResultsScreen\";\r\n// import SearchHistoryScreen from \"../SearchHistoryScreen/SearchHistoryScreen\";\r\n// import FavoritesScreen from \"./../FavoritesScreen/FavoritesScreen\";\r\n// import PhotosScreen from \"../PhotosScreen/PhotosScreen\";\r\n\r\n// const HomeScreen = lazy(() => {\r\n//   return import(\"./../HomeScreen/HomeScreen\");\r\n// });\r\n\r\nconst SearchResultsScreen = lazy(() =>\r\n  import(\"../SearchScreen/SearchResultsScreen\")\r\n);\r\nconst SearchHistoryScreen = lazy(() => {\r\n  return import(\"../SearchHistoryScreen/SearchHistoryScreen\");\r\n});\r\nconst FavoritesScreen = lazy(() => {\r\n  return import(\"./../FavoritesScreen/FavoritesScreen\");\r\n});\r\nconst PhotosScreen = lazy(() => {\r\n  return import(\"../PhotosScreen/PhotosScreen\");\r\n});\r\n\r\nconst RootRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Suspense fallback={<Preloader />}>\r\n        <Route path=\"/search\" component={SearchResultsScreen} />\r\n        <Route path=\"/history\" component={SearchHistoryScreen} />\r\n        <Route path=\"/favorites\" component={FavoritesScreen} />\r\n        <Route exact path=\"/\" component={HomeScreen} />\r\n        <Route path=\"/photo\" component={PhotosScreen} />\r\n      </Suspense>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default RootRouter;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport AppHeader from \"./components/AppHeader/AppHeader\";\r\n// import { Store } from \"./redux/store\";\r\nimport Store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport RootRouter from \"./navigation/RootRouter\";\r\n\r\nconst { store, persistor } = Store();\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <HashRouter>\r\n          <div className=\"MainWrapper\">\r\n            <div className=\"header\">\r\n              <AppHeader />\r\n            </div>\r\n\r\n            <div className=\"content\">\r\n              <RootRouter />\r\n              <footer className=\"footer\">\r\n                <span>2020</span>\r\n                <a\r\n                  href=\"https://youtu.be/A0FZIwabctw\"\r\n                  title=\"Узнать что это значит\"\r\n                  target=\"blank\"\r\n                >\r\n                  ⁕Made on Earth for Humans⁕\r\n                </a>\r\n              </footer>\r\n            </div>\r\n          </div>\r\n        </HashRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { UNAPI } from \"./../BLL/index\";\r\nlet _cp = 1;\r\nconst types = {\r\n  FETCH_PHOTOS: \"FETCH_PHOTOS\",\r\n  FETCH_SUCCESS: \"FETCH_SUCCESS\",\r\n  FETCH_FAILURE: \"FETCH_FAILURE\",\r\n  FETCH_PENDING: \"FETCH_PENDING\",\r\n\r\n  SET_CURRENT_PHOTO: \"SET_CURRENT_PHOTO\",\r\n  SET_CURRENT_PHOTO_SUCCESS: \"SET_CURRENT_PHOTO_SUCCESS\",\r\n\r\n  GET_RELATED_PHOTOS: \"GET_RELATED_PHOTOS\",\r\n  GET_RELATED_PHOTOS_PENDING: \"GET_RELATED_PHOTOS_PENDING\",\r\n  GET_RELATED_PHOTOS_SUCCESS: \"GET_RELATED_PHOTOS_SUCCESS\",\r\n\r\n  COMPARE_FAVORITES: \"COMPARE_FAVORITES\",\r\n  COMPARE_FAVORITES_SUCCESS: \"COMPARE_FAVORITES_SUCCESS\",\r\n\r\n  INCREASE_PAGE: \"INCREASE_PAGE\",\r\n};\r\n\r\nexport const photoActions = {\r\n  fetchSuccess: (photos) => {\r\n    return { type: types.FETCH_SUCCESS, photos: photos };\r\n  },\r\n  fetchAllPhotos: (page = 1) => {\r\n    return (dispatch) => {\r\n      UNAPI.photos(page)\r\n        .then((resp) => {\r\n          dispatch(photoActions.fetchSuccess(resp));\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n  },\r\n  increasePage: () => {\r\n    _cp = _cp + 1;\r\n    return (dispatch) => {\r\n      dispatch(photoActions.fetchAllPhotos(_cp));\r\n    };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  //list of all photos on HomeScreen | array\r\n  allPhotos: undefined,\r\n  currentPage: 1,\r\n\r\n};\r\n\r\nexport const photoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allPhotos: [...new Set([...(state.allPhotos || []), ...action.photos])],\r\n      };\r\n    case types.INCREASE_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action?._cp,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"cardStyle_wrapper__3wLqN\",\"card\":\"cardStyle_card__3Ox3Q\",\"informationOverlay\":\"cardStyle_informationOverlay__hwRyk\",\"image\":\"cardStyle_image__JVuE5\"};","const types = {\r\n  TOGGLE_FAVORITE: \"TOGGLE_FAVORITE\",\r\n  DELETE_FAVORITE: \"DELETE_FAVORITE\",\r\n};\r\n\r\nexport const actions = {\r\n  toggleFavorite: (photoJson) => {\r\n    return {\r\n      type: types.TOGGLE_FAVORITE,\r\n      photoJson: photoJson,\r\n    };\r\n  },\r\n\r\n  //currently not using\r\n  deleteFavorite: (photoID) => {\r\n    return {\r\n      type: types.DELETE_FAVORITE,\r\n      photoID: photoID,\r\n    };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  favoritesList:[],\r\n  total: 0,\r\n};\r\n\r\nexport const favoritesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.TOGGLE_FAVORITE: {\r\n      const isExisted = state.favoritesList.some((favoritesListItem) =>\r\n        compareFavoritesItem(favoritesListItem, action)\r\n      );\r\n      const likedPhoto = action.photoJson;\r\n      if (isExisted) {\r\n        delete likedPhoto.isLiked;\r\n        return Object.assign({}, state, {\r\n          favoritesList: state.favoritesList.filter(\r\n            (favoritesListItem) =>\r\n              !compareFavoritesItem(favoritesListItem, action)\r\n          ),\r\n        });\r\n      } else {\r\n        likedPhoto.isLiked = true;\r\n        return Object.assign({}, state, {\r\n          favoritesList: [...state.favoritesList, likedPhoto],\r\n        });\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst compareFavoritesItem = (favoritesItem, action) => {\r\n  return favoritesItem?.id === action.photoJson.id;\r\n};\r\n","import { UNAPI } from \"./../BLL/index\";\r\n\r\nconst types = {\r\n  SET_CURRENT_PHOTO: \"SET_CURRENT_PHOTO\",\r\n  SET_CURRENT_PHOTO_SUCCESS: \"SET_CURRENT_PHOTO_SUCCESS\",\r\n  SET_CURRENT_PHOTO_PENDING: \"SET_CURRENT_PHOTO_PENDING\",\r\n\r\n  GET_RELATED_PHOTOS: \"GET_RELATED_PHOTOS\",\r\n  GET_RELATED_PHOTOS_PENDING: \"GET_RELATED_PHOTOS_PENDING\",\r\n  GET_RELATED_PHOTOS_SUCCESS: \"GET_RELATED_PHOTOS_SUCCESS\",\r\n};\r\n\r\nexport const PhotosScreenActions = {\r\n  setCurrentPhoto: (id) => {\r\n    return (dispatch) => {\r\n      dispatch(PhotosScreenActions.setCurrentPhotoPending());\r\n      UNAPI.getPhoto(id).then((json) => {\r\n        dispatch(\r\n          PhotosScreenActions.setCurrentPhotoSuccess(json),\r\n          dispatch(PhotosScreenActions.getRelatedPhotos(json.alt_description))\r\n        );\r\n      });\r\n    };\r\n  },\r\n  setCurrentPhotoPending: () => {\r\n    return {\r\n      type: types.SET_CURRENT_PHOTO_PENDING,\r\n    };\r\n  },\r\n  setCurrentPhotoSuccess: (photo) => {\r\n    return {\r\n      type: types.SET_CURRENT_PHOTO_SUCCESS,\r\n      currentPhoto: photo,\r\n    };\r\n  },\r\n\r\n  getRelatedPhotos: (keyword) => {\r\n    return (dispatch) => {\r\n      dispatch(PhotosScreenActions.getRelatedPhotosPending());\r\n      UNAPI.searchPhotos(keyword).then((response) => {\r\n        dispatch(PhotosScreenActions.getRelatedPhotosSuccess(response.results));\r\n      });\r\n    };\r\n  },\r\n  getRelatedPhotosSuccess: (photos) => {\r\n    return {\r\n      type: types.GET_RELATED_PHOTOS_SUCCESS,\r\n      relatedPhotos: photos,\r\n    };\r\n  },\r\n  getRelatedPhotosPending: () => {\r\n    return { type: types.GET_RELATED_PHOTOS_PENDING };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  //a photo that user currently viewing on PhotosScreen | object\r\n  currentPhoto: undefined,\r\n  relatedPhotos: undefined,\r\n  isRelatedPhotosPending: true,\r\n  isCurrentPhotoPending: true,\r\n};\r\n\r\nexport const PhotosScreenReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_CURRENT_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPhoto: action.currentPhoto,\r\n        isCurrentPhotoPending: false,\r\n      };\r\n\r\n    case types.GET_RELATED_PHOTOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        relatedPhotos: action.relatedPhotos,\r\n        isRelatedPhotosPending: false,\r\n      };\r\n    case types.SET_CURRENT_PHOTO_PENDING:\r\n      return { ...state, isCurrentPhotoPending: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svg\":\"Instagram_svg__1I4sW\"};","import React from \"react\";\r\nimport styles from \"./preloader.module.scss\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div class={styles.loader}>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__ball}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Preloader;\r\n","import {\r\n  faDownload,\r\n  faExpand,\r\n  faHeart,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { UNAPI } from \"./../../BLL/index\";\r\nimport \"./cardOverlayStyle.css\";\r\nimport { actions } from \"../../redux/favoritesReducer\";\r\nimport { PhotosScreenActions } from \"./../../redux/PhotosScreenReducer\";\r\nimport InstagramLink from \"../InstagramLink/InstagramLink\";\r\n\r\nclass CardOverlay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLiked: this.props.json.isLiked,\r\n    };\r\n  }\r\n\r\n  onViewPhoto() {\r\n    const id = this.props.json.id;\r\n    this.props.viewPhoto(id);\r\n  }\r\n\r\n  render() {\r\n    let isLiked = this.props.json?.isLiked;\r\n    const user = this.props.json.user;\r\n\r\n    return (\r\n      <div className=\"card-overlay\">\r\n        <div className=\"profile-info\">\r\n          <img\r\n            src={user.profile_image.medium}\r\n            className=\"profile-photo\"\r\n            alt=\"profile\"\r\n          />\r\n          <div className=\"profile-info-name\">\r\n            <InstagramLink instagram_username={user.instagram_username}/>\r\n            <span>{user.name}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"information-buttons\">\r\n          <button\r\n            className=\"information-button\"\r\n            style={isLiked ? { color: \"red\" } : { color: \"white\" }}\r\n            onClick={() => {\r\n              this.props.toggleFavorite(this.props.json);\r\n            }}\r\n          >\r\n            <FontAwesomeIcon className=\"information-icon\" icon={faHeart} />\r\n          </button>\r\n          <Link\r\n            to=\"/photo\"\r\n            className=\"information-button\"\r\n            onClick={this.onViewPhoto.bind(this)}\r\n          >\r\n            <FontAwesomeIcon className=\"information-icon\" icon={faExpand} />\r\n          </Link>\r\n\r\n          <a\r\n            className=\"information-button\"\r\n            onClick={() => {\r\n              UNAPI.download(this.props.json);\r\n            }}\r\n            href={this.props.json.links.download + \"?force=true\"}\r\n          >\r\n            <FontAwesomeIcon className=\"information-icon\" icon={faDownload} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleFavorite: (json) => {\r\n      dispatch(actions.toggleFavorite(json));\r\n    },\r\n    viewPhoto: (id) => {\r\n      dispatch(PhotosScreenActions.setCurrentPhoto(id));\r\n    },\r\n  };\r\n};\r\nconst mapState = (state) => {\r\n  return {\r\n    favoritesList: state.favorites.favoritesList,\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatchToProps)(CardOverlay);\r\n","import React from \"react\";\r\nimport CardOverlay from \"./CardOverlay\";\r\nimport styles from \"./cardStyle.module.css\";\r\n\r\nexport default class Card extends React.Component {\r\n  state = {\r\n    isImageLoaded: false,\r\n    visibility: { visibility: \"hidden\" },\r\n  };\r\n  render() {\r\n    const { src, altDesc, json, setRef } = this.props;\r\n    return (\r\n      <figure\r\n        className={styles.wrapper}\r\n        ref={(el) => {\r\n          if (setRef) {\r\n            setRef(el);\r\n          }\r\n        }}\r\n      >\r\n        <div className={styles.card}>\r\n          <img\r\n            src={src}\r\n            alt={altDesc}\r\n            className={styles.image}\r\n            style={this.state.visibility}\r\n            onLoad={() => {\r\n              this.setState({\r\n                isImageLoaded: true,\r\n                visibility: { visibility: \"visible\" },\r\n              });\r\n            }}\r\n          />\r\n          <div className={styles.informationOverlay}>\r\n            <CardOverlay json={json} />\r\n          </div>\r\n        </div>\r\n      </figure>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Masonry from \"react-masonry-component\";\r\nimport Card from \"../Card/Card.jsx\";\r\nimport \"./cardListStyle.css\";\r\n\r\nclass CardList extends React.Component {\r\n  // How favorites works in this app?\r\n  // When user presses on a Like button, favoritesReducer adds \"isLike\" boolean field into photo`s object,\r\n  // and copying that object into \"favorites\" array.\r\n  // Also we have redux-persist library, that saves apps State into localStorage.\r\n  // But, when user reloads the page, app fetches new photos from server.\r\n  // And that photos objects do not contain \"isLike\" field\r\n  // This method compares photos from server and favoritesList, and if this photo contains in favoritesList\r\n  // mutates object from server by adding \"isLike\" field\r\n  compareWithFavorites() {\r\n    const favList = this.props.favoritesList; //array\r\n    const data = this.props?.data;\r\n\r\n    if (data) {\r\n      for (let favorite of favList) {\r\n        let i = 0;\r\n        for (let item of data) {\r\n          if (favorite.id === item.id) {\r\n            item.isLiked = true;\r\n          }\r\n        }\r\n        i = i + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.compareWithFavorites();\r\n    const { setLastCardRef } = this.props;\r\n    return (\r\n      <Masonry\r\n        className={\"CardList\"}\r\n        elementType={\"div\"}\r\n        disableImagesLoaded={false}\r\n        updateOnEachImageLoad={false}\r\n      >\r\n        {this.props.data\r\n          ? this.props.data.map((item, index) => {\r\n              if (index === this.props.data.length - 1) {\r\n                return (\r\n                  <Card\r\n                    setRef={setLastCardRef}\r\n                    src={item.urls.small}\r\n                    altDesc={item.alt_description}\r\n                    json={item}\r\n                    key={item.id}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <Card\r\n                    src={item.urls.small}\r\n                    altDesc={item.alt_description}\r\n                    json={item}\r\n                    key={item.id}\r\n                  />\r\n                );\r\n              }\r\n            })\r\n          : null}\r\n      </Masonry>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    favoritesList: state.favorites.favoritesList,\r\n  };\r\n};\r\nexport default connect(mapState)(CardList);\r\n","import { UNAPI } from \"./../BLL/index\";\r\n\r\nconst isEmpty = (str) => {\r\n  if (str.trim() === \"\") return true;\r\n\r\n  return false;\r\n};\r\n\r\nconst types = {\r\n  SEARCH_PENDING: \"SEARCH_PENDING\",\r\n  SEARCH_SUCCESS: \"SEARCH_SUCCESS\",\r\n  SEARCH_FAILURE: \"SEARCH_FAILURE\",\r\n  ADD_SEARCH_KEYWORD: \"ADD_SEARCH_KEYWORD\",\r\n};\r\n\r\nexport const searchActions = {\r\n  searchSuccsess: (response) => {\r\n    return { type: types.SEARCH_SUCCESS, results: response.results };\r\n  },\r\n  searchFailure: () => {\r\n    return { type: types.SEARCH_NO_MATHCES };\r\n  },\r\n  searchPending: () => {\r\n    return { type: types.SEARCH_PENDING };\r\n  },\r\n  addSearchKeyword: (keyword) => {\r\n    return { type: types.ADD_SEARCH_KEYWORD, keyword: keyword };\r\n  },\r\n  doSearch: (keyword) => {\r\n    if (isEmpty(keyword)) {\r\n      alert(\"Пустой поисковый запрос\");\r\n    }\r\n    return (dispatch) => {\r\n      dispatch(searchActions.searchPending());\r\n      dispatch(searchActions.addSearchKeyword(keyword));\r\n      UNAPI.searchPhotos(keyword)\r\n        .then((resp) => {\r\n          dispatch(searchActions.searchSuccsess(resp));\r\n        })\r\n        .catch((error) => {\r\n          alert(\"неудача при поиске\", error);\r\n          dispatch(searchActions.searchFailure());\r\n        });\r\n    };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  search_keywords: [],\r\n  search_results: undefined,\r\n  is_pending: false,\r\n};\r\n\r\nexport const searchReducer = (state = initialState, action) => {\r\n  const { type, results, keyword } = action;\r\n\r\n  switch (type) {\r\n    case types.SEARCH_PENDING:\r\n      return {\r\n        ...state,\r\n        is_pending: true,\r\n      };\r\n    case types.SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search_results: results,\r\n        is_pending: false,\r\n      };\r\n    case types.SEARCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        search_results: \"no matches\",\r\n        is_pending: false,\r\n      };\r\n\r\n    case types.ADD_SEARCH_KEYWORD:\r\n      let copyKeywords = [...state.search_keywords];\r\n      copyKeywords.push(keyword);\r\n      return {\r\n        ...state,\r\n        search_keywords: copyKeywords,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n","import Unsplash, { toJson } from \"unsplash-js\";\r\n\r\nconst accessKey = \"rUttPX0GjgLp7kiiXGQNNTqLIuS2XGtb3OP6L0ZqSQY\";\r\nconst unsplash = new Unsplash({\r\n  accessKey: accessKey,\r\n});\r\n\r\nexport const UNAPI = {\r\n  getPhoto: (id) => {\r\n    return unsplash.photos.getPhoto(id).then(toJson);\r\n  },\r\n  photos: (page) => {\r\n    const json = unsplash.photos\r\n      .listPhotos(page, 2, \"latest\")\r\n      .then(toJson)\r\n      .then((json) => json);\r\n    \r\n    return json;\r\n  },\r\n  download: (json) => {\r\n    unsplash.photos.downloadPhoto(json);\r\n  },\r\n  listCollections: () => {\r\n    const json = unsplash.collections\r\n      .listCollections(1, 10, \"popular\")\r\n      .then(toJson)\r\n      .then((json) => {\r\n        return json;\r\n      });\r\n    return json;\r\n  },\r\n  searchPhotos: (keyword) => {\r\n    const json = unsplash.search\r\n      .photos(keyword, 1, 10)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        return json;\r\n      });\r\n    return json;\r\n  },\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m12.004 5.838c-3.403 0-6.158 2.758-6.158 6.158 0 3.403 2.758 6.158 6.158 6.158 3.403 0 6.158-2.758 6.158-6.158 0-3.403-2.758-6.158-6.158-6.158zm0 10.155c-2.209 0-3.997-1.789-3.997-3.997s1.789-3.997 3.997-3.997 3.997 1.789 3.997 3.997c.001 2.208-1.788 3.997-3.997 3.997z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"m16.948.076c-2.208-.103-7.677-.098-9.887 0-1.942.091-3.655.56-5.036 1.941-2.308 2.308-2.013 5.418-2.013 9.979 0 4.668-.26 7.706 2.013 9.979 2.317 2.316 5.472 2.013 9.979 2.013 4.624 0 6.22.003 7.855-.63 2.223-.863 3.901-2.85 4.065-6.419.104-2.209.098-7.677 0-9.887-.198-4.213-2.459-6.768-6.976-6.976zm3.495 20.372c-1.513 1.513-3.612 1.378-8.468 1.378-5 0-7.005.074-8.468-1.393-1.685-1.677-1.38-4.37-1.38-8.453 0-5.525-.567-9.504 4.978-9.788 1.274-.045 1.649-.06 4.856-.06l.045.03c5.329 0 9.51-.558 9.761 4.986.057 1.265.07 1.645.07 4.847-.001 4.942.093 6.959-1.394 8.453z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  cx: 18.406,\n  cy: 5.595,\n  r: 1.439\n});\n\nvar SvgInstagram = function SvgInstagram(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Bold\",\n    enableBackground: \"new 0 0 24 24\",\n    height: 512,\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgInstagram, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/instagram.dca29619.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { ReactComponent as InstagramLogo } from \"./../../images/instagram.svg\";\r\nimport styles from \"./Instagram.module.css\";\r\n\r\nconst InstagramLink = ({ instagram_username }) => {\r\n  const size = \"1.3em\";\r\n  if (isMobile) {\r\n    return (\r\n      <a href={`instagram://user?username=${instagram_username}`}>\r\n        <InstagramLogo height={size} width={size} className={styles.svg} /> @\r\n        {instagram_username}\r\n      </a>\r\n    );\r\n  } else {\r\n    return (\r\n      <a href={`https://instagram.com/${instagram_username}`} target=\"blank\">\r\n        <InstagramLogo\r\n          height={size}\r\n          width={size}\r\n          className={styles.InstagramLogo}\r\n        />{\" \"}\r\n        @{instagram_username}\r\n      </a>\r\n    );\r\n  }\r\n};\r\nexport default InstagramLink;\r\n"],"sourceRoot":""}