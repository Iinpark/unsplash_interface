{"version":3,"sources":["components/AppHeader/AppHeader.module.css","BLL/index.js","redux/favoritesReducer.js","redux/PhotosScreenReducer.js","components/Preloader/Preloader.jsx","redux/photoReducer.js","redux/searchReducer.js","components/Preloader/preloader.module.scss","components/AppHeader/AppHeader.js","redux/store.js","navigation/RootRouter.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","unsplash","Unsplash","accessKey","UNAPI","getPhoto","id","photos","then","toJson","page","listPhotos","json","download","downloadPhoto","listCollections","collections","searchPhotos","keyword","search","types","actions","toggleFavorite","photoJson","type","deleteFavorite","photoID","initialState","favoritesList","total","favoritesReducer","state","action","isExisted","some","favoritesListItem","compareFavoritesItem","likedPhoto","isLiked","Object","assign","filter","favoritesItem","PhotosScreenActions","setCurrentPhoto","dispatch","setCurrentPhotoPending","setCurrentPhotoSuccess","getRelatedPhotos","alt_description","photo","currentPhoto","getRelatedPhotosPending","response","getRelatedPhotosSuccess","results","relatedPhotos","undefined","isRelatedPhotosPending","isCurrentPhotoPending","PhotosScreenReducer","Preloader","className","styles","wrapper","class","loader","loader__bar","loader__ball","_cp","photoActions","fetchSuccess","fetchAllPhotos","resp","catch","error","alert","increasePage","allPhotos","currentPage","photoReducer","Set","SEARCH_PENDING","SEARCH_SUCCESS","SEARCH_FAILURE","ADD_SEARCH_KEYWORD","searchActions","searchSuccsess","searchFailure","SEARCH_NO_MATHCES","searchPending","addSearchKeyword","doSearch","trim","search_keywords","search_results","is_pending","searchReducer","copyKeywords","push","AppHeader","mainWrapper","exact","to","logoWrapper","activeClassName","icon","faHamsa","logoText","navigation","navigationButton","color","faSearch","faHeart","faHistory","persistConfig","key","storage","blacklist","rootReducer","combineReducers","favorites","photosScreen","persistedReducer","persistReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","SearchResultsScreen","lazy","HomeScreen","SearchHistoryScreen","FavoritesScreen","PhotosScreen","RootRouter","fallback","path","component","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","App","loading","href","title","target","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.1c5e7feb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"AppHeader_mainWrapper__3Q9Kk\",\"logoWrapper\":\"AppHeader_logoWrapper__fa2m8\",\"logo\":\"AppHeader_logo__MYDYr\",\"logoText\":\"AppHeader_logoText__3mSMA\",\"navigation\":\"AppHeader_navigation__uD7xY\",\"navigationButton\":\"AppHeader_navigationButton__2peAD\"};","import Unsplash, { toJson } from \"unsplash-js\";\r\n\r\nconst accessKey = \"rUttPX0GjgLp7kiiXGQNNTqLIuS2XGtb3OP6L0ZqSQY\";\r\nconst unsplash = new Unsplash({\r\n  accessKey: accessKey,\r\n});\r\n\r\nexport const UNAPI = {\r\n  getPhoto: (id) => {\r\n    return unsplash.photos.getPhoto(id).then(toJson);\r\n  },\r\n  photos: (page) => {\r\n    const json = unsplash.photos\r\n      .listPhotos(page, 2, \"latest\")\r\n      .then(toJson)\r\n      .then((json) => json);\r\n    \r\n    return json;\r\n  },\r\n  download: (json) => {\r\n    unsplash.photos.downloadPhoto(json);\r\n  },\r\n  listCollections: () => {\r\n    const json = unsplash.collections\r\n      .listCollections(1, 10, \"popular\")\r\n      .then(toJson)\r\n      .then((json) => {\r\n        return json;\r\n      });\r\n    return json;\r\n  },\r\n  searchPhotos: (keyword) => {\r\n    const json = unsplash.search\r\n      .photos(keyword, 1, 10)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        return json;\r\n      });\r\n    return json;\r\n  },\r\n};\r\n","const types = {\r\n  TOGGLE_FAVORITE: \"TOGGLE_FAVORITE\",\r\n  DELETE_FAVORITE: \"DELETE_FAVORITE\",\r\n};\r\n\r\nexport const actions = {\r\n  toggleFavorite: (photoJson) => {\r\n    return {\r\n      type: types.TOGGLE_FAVORITE,\r\n      photoJson: photoJson,\r\n    };\r\n  },\r\n\r\n  //currently not using\r\n  deleteFavorite: (photoID) => {\r\n    return {\r\n      type: types.DELETE_FAVORITE,\r\n      photoID: photoID,\r\n    };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  favoritesList:[],\r\n  total: 0,\r\n};\r\n\r\nexport const favoritesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.TOGGLE_FAVORITE: {\r\n      const isExisted = state.favoritesList.some((favoritesListItem) =>\r\n        compareFavoritesItem(favoritesListItem, action)\r\n      );\r\n      const likedPhoto = action.photoJson;\r\n      if (isExisted) {\r\n        delete likedPhoto.isLiked;\r\n        return Object.assign({}, state, {\r\n          favoritesList: state.favoritesList.filter(\r\n            (favoritesListItem) =>\r\n              !compareFavoritesItem(favoritesListItem, action)\r\n          ),\r\n        });\r\n      } else {\r\n        likedPhoto.isLiked = true;\r\n        return Object.assign({}, state, {\r\n          favoritesList: [...state.favoritesList, likedPhoto],\r\n        });\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst compareFavoritesItem = (favoritesItem, action) => {\r\n  return favoritesItem?.id === action.photoJson.id;\r\n};\r\n","import { UNAPI } from \"./../BLL/index\";\r\n\r\nconst types = {\r\n  SET_CURRENT_PHOTO: \"SET_CURRENT_PHOTO\",\r\n  SET_CURRENT_PHOTO_SUCCESS: \"SET_CURRENT_PHOTO_SUCCESS\",\r\n  SET_CURRENT_PHOTO_PENDING: \"SET_CURRENT_PHOTO_PENDING\",\r\n\r\n  GET_RELATED_PHOTOS: \"GET_RELATED_PHOTOS\",\r\n  GET_RELATED_PHOTOS_PENDING: \"GET_RELATED_PHOTOS_PENDING\",\r\n  GET_RELATED_PHOTOS_SUCCESS: \"GET_RELATED_PHOTOS_SUCCESS\",\r\n};\r\n\r\nexport const PhotosScreenActions = {\r\n  setCurrentPhoto: (id) => {\r\n    return (dispatch) => {\r\n      dispatch(PhotosScreenActions.setCurrentPhotoPending());\r\n      UNAPI.getPhoto(id).then((json) => {\r\n        dispatch(\r\n          PhotosScreenActions.setCurrentPhotoSuccess(json),\r\n          dispatch(PhotosScreenActions.getRelatedPhotos(json.alt_description))\r\n        );\r\n      });\r\n    };\r\n  },\r\n  setCurrentPhotoPending: () => {\r\n    return {\r\n      type: types.SET_CURRENT_PHOTO_PENDING,\r\n    };\r\n  },\r\n  setCurrentPhotoSuccess: (photo) => {\r\n    return {\r\n      type: types.SET_CURRENT_PHOTO_SUCCESS,\r\n      currentPhoto: photo,\r\n    };\r\n  },\r\n\r\n  getRelatedPhotos: (keyword) => {\r\n    return (dispatch) => {\r\n      dispatch(PhotosScreenActions.getRelatedPhotosPending());\r\n      UNAPI.searchPhotos(keyword).then((response) => {\r\n        dispatch(PhotosScreenActions.getRelatedPhotosSuccess(response.results));\r\n      });\r\n    };\r\n  },\r\n  getRelatedPhotosSuccess: (photos) => {\r\n    return {\r\n      type: types.GET_RELATED_PHOTOS_SUCCESS,\r\n      relatedPhotos: photos,\r\n    };\r\n  },\r\n  getRelatedPhotosPending: () => {\r\n    return { type: types.GET_RELATED_PHOTOS_PENDING };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  //a photo that user currently viewing on PhotosScreen | object\r\n  currentPhoto: undefined,\r\n  relatedPhotos: undefined,\r\n  isRelatedPhotosPending: true,\r\n  isCurrentPhotoPending: true,\r\n};\r\n\r\nexport const PhotosScreenReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SET_CURRENT_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPhoto: action.currentPhoto,\r\n        isCurrentPhotoPending: false,\r\n      };\r\n\r\n    case types.GET_RELATED_PHOTOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        relatedPhotos: action.relatedPhotos,\r\n        isRelatedPhotosPending: false,\r\n      };\r\n    case types.SET_CURRENT_PHOTO_PENDING:\r\n      return { ...state, isCurrentPhotoPending: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./preloader.module.scss\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div class={styles.loader}>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__bar}></div>\r\n        <div class={styles.loader__ball}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Preloader;\r\n","import { UNAPI } from \"./../BLL/index\";\r\nlet _cp = 1;\r\nconst types = {\r\n  FETCH_PHOTOS: \"FETCH_PHOTOS\",\r\n  FETCH_SUCCESS: \"FETCH_SUCCESS\",\r\n  FETCH_FAILURE: \"FETCH_FAILURE\",\r\n  FETCH_PENDING: \"FETCH_PENDING\",\r\n\r\n  SET_CURRENT_PHOTO: \"SET_CURRENT_PHOTO\",\r\n  SET_CURRENT_PHOTO_SUCCESS: \"SET_CURRENT_PHOTO_SUCCESS\",\r\n\r\n  GET_RELATED_PHOTOS: \"GET_RELATED_PHOTOS\",\r\n  GET_RELATED_PHOTOS_PENDING: \"GET_RELATED_PHOTOS_PENDING\",\r\n  GET_RELATED_PHOTOS_SUCCESS: \"GET_RELATED_PHOTOS_SUCCESS\",\r\n\r\n  COMPARE_FAVORITES: \"COMPARE_FAVORITES\",\r\n  COMPARE_FAVORITES_SUCCESS: \"COMPARE_FAVORITES_SUCCESS\",\r\n\r\n  INCREASE_PAGE: \"INCREASE_PAGE\",\r\n};\r\n\r\nexport const photoActions = {\r\n  fetchSuccess: (photos) => {\r\n    return { type: types.FETCH_SUCCESS, photos: photos };\r\n  },\r\n  fetchAllPhotos: (page = 1) => {\r\n    return (dispatch) => {\r\n      UNAPI.photos(page)\r\n        .then((resp) => {\r\n          dispatch(photoActions.fetchSuccess(resp));\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n  },\r\n  increasePage: () => {\r\n    _cp = _cp + 1;\r\n    return (dispatch) => {\r\n      dispatch(photoActions.fetchAllPhotos(_cp));\r\n    };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  //list of all photos on HomeScreen | array\r\n  allPhotos: undefined,\r\n  currentPage: 1,\r\n\r\n};\r\n\r\nexport const photoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allPhotos: [...new Set([...(state.allPhotos || []), ...action.photos])],\r\n      };\r\n    case types.INCREASE_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action?._cp,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { UNAPI } from \"./../BLL/index\";\r\n\r\nconst isEmpty = (str) => {\r\n  if (str.trim() === \"\") return true;\r\n\r\n  return false;\r\n};\r\n\r\nconst types = {\r\n  SEARCH_PENDING: \"SEARCH_PENDING\",\r\n  SEARCH_SUCCESS: \"SEARCH_SUCCESS\",\r\n  SEARCH_FAILURE: \"SEARCH_FAILURE\",\r\n  ADD_SEARCH_KEYWORD: \"ADD_SEARCH_KEYWORD\",\r\n};\r\n\r\nexport const searchActions = {\r\n  searchSuccsess: (response) => {\r\n    return { type: types.SEARCH_SUCCESS, results: response.results };\r\n  },\r\n  searchFailure: () => {\r\n    return { type: types.SEARCH_NO_MATHCES };\r\n  },\r\n  searchPending: () => {\r\n    return { type: types.SEARCH_PENDING };\r\n  },\r\n  addSearchKeyword: (keyword) => {\r\n    return { type: types.ADD_SEARCH_KEYWORD, keyword: keyword };\r\n  },\r\n  doSearch: (keyword) => {\r\n    if (isEmpty(keyword)) {\r\n      alert(\"Пустой поисковый запрос\");\r\n    }\r\n    return (dispatch) => {\r\n      dispatch(searchActions.searchPending());\r\n      dispatch(searchActions.addSearchKeyword(keyword));\r\n      UNAPI.searchPhotos(keyword)\r\n        .then((resp) => {\r\n          dispatch(searchActions.searchSuccsess(resp));\r\n        })\r\n        .catch((error) => {\r\n          alert(\"неудача при поиске\", error);\r\n          dispatch(searchActions.searchFailure());\r\n        });\r\n    };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  search_keywords: [],\r\n  search_results: undefined,\r\n  is_pending: false,\r\n};\r\n\r\nexport const searchReducer = (state = initialState, action) => {\r\n  const { type, results, keyword } = action;\r\n\r\n  switch (type) {\r\n    case types.SEARCH_PENDING:\r\n      return {\r\n        ...state,\r\n        is_pending: true,\r\n      };\r\n    case types.SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search_results: results,\r\n        is_pending: false,\r\n      };\r\n    case types.SEARCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        search_results: \"no matches\",\r\n        is_pending: false,\r\n      };\r\n\r\n    case types.ADD_SEARCH_KEYWORD:\r\n      let copyKeywords = [...state.search_keywords];\r\n      copyKeywords.push(keyword);\r\n      return {\r\n        ...state,\r\n        search_keywords: copyKeywords,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"preloader_wrapper__1l-Ra\",\"loader\":\"preloader_loader__2o4hz\",\"loader__bar\":\"preloader_loader__bar__3havf\",\"barUp1\":\"preloader_barUp1__225xD\",\"barUp2\":\"preloader_barUp2__1l-ne\",\"barUp3\":\"preloader_barUp3__mm6cD\",\"barUp4\":\"preloader_barUp4__1hzwd\",\"barUp5\":\"preloader_barUp5__kMDjJ\",\"loader__ball\":\"preloader_loader__ball__dmJs1\",\"ball\":\"preloader_ball__QJqXS\"};","import React from \"react\";\r\nimport styles from \"./AppHeader.module.css\";\r\nimport \"./activeStyle.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHistory,\r\n  faSearch,\r\n  faHeart,\r\n  faHamsa,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <div className={styles.mainWrapper}>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={styles.logoWrapper}\r\n        // activeStyle={styles.active}\r\n        activeClassName=\"active\"\r\n      >\r\n        <FontAwesomeIcon icon={faHamsa} />\r\n        <span className={styles.logoText}>Resplash</span>\r\n      </NavLink>\r\n      <div className={styles.navigation}>\r\n        <NavLink\r\n          to=\"/search\"\r\n          className={styles.navigationButton}\r\n          // activeStyle={styles.active}\r\n          activeClassName=\"active\"\r\n        >\r\n          <FontAwesomeIcon color=\"white\" icon={faSearch} />\r\n          <span>Поиск</span>\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/favorites\"\r\n          className={styles.navigationButton}\r\n          // activeStyle={styles.active}\r\n          activeClassName=\"active\"\r\n        >\r\n          <FontAwesomeIcon color=\"white\" icon={faHeart} />\r\n          <span>Избранное</span>\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/history\"\r\n          className={styles.navigationButton}\r\n          // activeStyle={styles.active}\r\n          activeClassName=\"active\"\r\n        >\r\n          <FontAwesomeIcon color=\"white\" icon={faHistory} />\r\n          <span>История поиска</span>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { searchReducer } from \"./searchReducer\";\r\nimport { favoritesReducer } from \"./favoritesReducer\";\r\nimport { photoReducer } from \"./photoReducer\";\r\n//redux-persist. for saving state into localStorage\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { PhotosScreenReducer } from \"./PhotosScreenReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"photos\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  search: searchReducer,\r\n  favorites: favoritesReducer,\r\n  photos: photoReducer,\r\n  photosScreen: PhotosScreenReducer,\r\n});\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n  let store = createStore(\r\n    persistedReducer,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n  );\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Preloader from \"../components/Preloader/Preloader\";\r\n// import SearchResultsScreen from \"../SearchScreen/SearchResultsScreen\";\r\n//import HomeScreen from \"./../HomeScreen/HomeScreen\";\r\n// import SearchHistoryScreen from \"../SearchHistoryScreen/SearchHistoryScreen\";\r\n// import FavoritesScreen from \"./../FavoritesScreen/FavoritesScreen\";\r\n// import PhotosScreen from \"../PhotosScreen/PhotosScreen\";\r\n\r\nconst SearchResultsScreen = lazy(() =>\r\n  import(\"../SearchScreen/SearchResultsScreen\")\r\n);\r\nconst HomeScreen = lazy(() => {\r\n  return import(\"./../HomeScreen/HomeScreen\");\r\n});\r\nconst SearchHistoryScreen = lazy(() => {\r\n  return import(\"../SearchHistoryScreen/SearchHistoryScreen\");\r\n});\r\nconst FavoritesScreen = lazy(() => {\r\n  return import(\"./../FavoritesScreen/FavoritesScreen\");\r\n});\r\nconst PhotosScreen = lazy(() => {\r\n  return import(\"../PhotosScreen/PhotosScreen\");\r\n});\r\n\r\nconst RootRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Suspense fallback={<Preloader />}>\r\n        <Route path=\"/search\" component={SearchResultsScreen} />\r\n        <Route path=\"/history\" component={SearchHistoryScreen} />\r\n        <Route path=\"/favorites\" component={FavoritesScreen} />\r\n        <Route exact path=\"/\" component={HomeScreen} />\r\n        <Route path=\"/photo\" component={PhotosScreen} />\r\n      </Suspense>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default RootRouter;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport AppHeader from \"./components/AppHeader/AppHeader\";\r\n// import { Store } from \"./redux/store\";\r\nimport Store from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport RootRouter from \"./navigation/RootRouter\";\r\n\r\nconst { store, persistor } = Store();\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <HashRouter>\r\n          <div className=\"MainWrapper\">\r\n            <div className=\"header\">\r\n              <AppHeader />\r\n            </div>\r\n\r\n            <div className=\"content\">\r\n              <RootRouter />\r\n              <footer className=\"footer\">\r\n                <span>2020</span>\r\n                <a\r\n                  href=\"https://youtu.be/A0FZIwabctw\"\r\n                  title=\"Узнать что это значит\"\r\n                  target=\"blank\"\r\n                >\r\n                  ⁕Made on Earth for Humans⁕\r\n                </a>\r\n              </footer>\r\n            </div>\r\n          </div>\r\n        </HashRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}