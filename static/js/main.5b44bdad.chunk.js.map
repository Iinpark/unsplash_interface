{"version":3,"sources":["components/AppHeader/AppHeader.js","BLL/index.js","redux/searchReducer.js","redux/favoritesReducer.js","redux/photoReducer.js","redux/store.js","components/TextListItem/TextListItem.jsx","components/Lists/HorizontalTextList.jsx","SearchScreen/SearchHeader.jsx","components/Card/CardOverlay.jsx","components/Card/Card.jsx","components/Lists/CardList.js","SearchScreen/SearchResultsScreen.jsx","HomeScreen/HomeScreen.jsx","SearchHistoryScreen/SearchHistoryHeader.jsx","SearchHistoryScreen/SearchHistoryScreen.jsx","FavoritesScreen/FavoritesScreen.jsx","PhotosScreen/PhotosScreen.jsx","navigation/RootRouter.jsx","App.js","serviceWorker.js","index.js","PhotosScreen/PhotosScreen.module.css"],"names":["AppHeader","className","to","icon","faHamsa","color","faSearch","faHeart","faHistory","accessKey","unsplash","Unsplash","UNAPI","id","photos","getPhoto","then","toJson","listPhotos","json","fetch","links","download_location","resp","link","console","log","window","open","url","downloadPhoto","collections","listCollections","keyword","search","types","SEARCH_PENDING","SEARCH_SUCCESS","SEARCH_FAILURE","ADD_SEARCH_KEYWORD","searchActions","searchSuccsess","response","type","results","searchFailure","SEARCH_NO_MATHCES","searchPending","addSearchKeyword","doSearch","trim","alert","dispatch","catch","error","initialState","search_keywords","search_results","undefined","is_pending","actions","photoJson","favoritesList","total","compareFavoritesItem","favoritesItem","action","photoActions","fetchSuccess","setCurrentPhotoSuccess","photo","currentPhoto","fetchAllPhotos","setCurrentPhoto","getRelatedPhotos","alt_description","getRelatedPhotosPending","getRelatedPhotosSuccess","relatedPhotos","allPhotos","isRelatedPhotosPending","rootReducer","combineReducers","state","isPending","copyKeywords","push","favorites","isExisted","some","favoritesListItem","likedPhoto","isLiked","Object","assign","filter","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","thunk","TextListItem","itemTitle","HorizontalTextList","this","props","data","map","item","React","PureComponent","SearchHeader","collectionsList","searchKeyword","titles","title","setState","placeholder","onChange","event","target","value","onClick","size","width","Component","connect","CardOverlay","viewPhoto","user","src","profile_image","medium","alt","instagram_username","name","style","toggleFavorite","onViewPhoto","bind","faExpand","faDownload","Card","altDesc","CardList","urls","small","SearchResultsScreen","HomeScreen","search_history_list","SearchHistoryScreen","PhotosScreen","tags","styles","relatedTags","tag","display","photosScreenWrapper","photosScreenBackground","regular","photosScreenOverlay","photoUpperButtons","profileInfo","profilePhoto","profileText","profileName","username","profileLink","upperButtons","upperButtonsHeart","upperButtonsDownload","tagList","RootRouter","path","exact","App","store","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.5b44bdad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHistory,\r\n  faSearch,\r\n  faHeart,\r\n  faHamsa,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <div className=\"container-fluid mainWrapper\">\r\n      <Link to=\"/\" className=\"logoWrapper\">\r\n        <FontAwesomeIcon icon={faHamsa} />\r\n        <span className=\"logoText\">unsplash_interface</span>\r\n      </Link>\r\n      <div className=\"navigation\">\r\n        <Link to=\"/search\" className=\"navigation-button\">\r\n          <FontAwesomeIcon color=\"white\" icon={faSearch} />\r\n          <span>Поиск</span>\r\n        </Link>\r\n        <Link to=\"/favorites\" className=\"navigation-button\">\r\n          <FontAwesomeIcon color=\"white\" icon={faHeart} />\r\n          <span>Избранное</span>\r\n        </Link>\r\n        <Link to=\"/history\" className=\"navigation-button\">\r\n          <FontAwesomeIcon color=\"white\" icon={faHistory} />\r\n          <span>История поиска</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import Unsplash, { toJson } from \"unsplash-js\";\r\n\r\nconst accessKey = \"rUttPX0GjgLp7kiiXGQNNTqLIuS2XGtb3OP6L0ZqSQY\";\r\nconst unsplash = new Unsplash({\r\n  accessKey: accessKey,\r\n});\r\n\r\nexport const UNAPI = {\r\n  getPhoto: (id) => {\r\n    return unsplash.photos.getPhoto(id).then(toJson);\r\n  },\r\n  photos: () => {\r\n    const json = unsplash.photos\r\n      .listPhotos(1, 10, \"latest\")\r\n      .then(toJson)\r\n      .then((json) => json);\r\n    return json;\r\n  },\r\n  download: (json) => {\r\n    fetch(json.links.download_location + `?client_id=${accessKey}`)\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((link) => {\r\n        console.log(typeof link);\r\n\r\n        window.open(link.url);\r\n      });\r\n    unsplash.photos.downloadPhoto(json);\r\n  },\r\n  listCollections: () => {\r\n    const json = unsplash.collections\r\n      .listCollections(1, 10, \"popular\")\r\n      .then(toJson)\r\n      .then((json) => {\r\n        return json;\r\n      });\r\n    return json;\r\n  },\r\n  searchPhotos: (keyword) => {\r\n    const json = unsplash.search\r\n      .photos(keyword, 1, 10)\r\n      .then(toJson)\r\n      .then((json) => {\r\n        return json;\r\n      });\r\n    return json;\r\n  },\r\n};\r\n","import { UNAPI } from \"./../BLL/index\";\r\n\r\nconst isEmpty = (str) => {\r\n  if (str.trim() === \"\") return true;\r\n\r\n  return false;\r\n};\r\n\r\nconst types = {\r\n  SEARCH_PENDING: \"SEARCH_PENDING\",\r\n  SEARCH_SUCCESS: \"SEARCH_SUCCESS\",\r\n  SEARCH_FAILURE: \"SEARCH_FAILURE\",\r\n  ADD_SEARCH_KEYWORD: \"ADD_SEARCH_KEYWORD\",\r\n};\r\n\r\nexport const searchActions = {\r\n  searchSuccsess: (response) => {\r\n    return { type: types.SEARCH_SUCCESS, results: response.results };\r\n  },\r\n  searchFailure: () => {\r\n    return { type: types.SEARCH_NO_MATHCES };\r\n  },\r\n  searchPending: () => {\r\n    return { type: types.SEARCH_PENDING };\r\n  },\r\n  addSearchKeyword: (keyword) => {\r\n    return { type: types.ADD_SEARCH_KEYWORD, keyword: keyword };\r\n  },\r\n  doSearch: (keyword) => {\r\n    if (isEmpty(keyword)) {\r\n      alert(\"Пустой поисковый запрос\");\r\n    }\r\n    return (dispatch) => {\r\n      dispatch(searchActions.searchPending());\r\n      dispatch(searchActions.addSearchKeyword(keyword));\r\n      UNAPI.searchPhotos(keyword)\r\n        .then((resp) => {\r\n          dispatch(searchActions.searchSuccsess(resp));\r\n        })\r\n        .catch((error) => {\r\n          alert(\"неудача при поиске\", error);\r\n          dispatch(searchActions.searchFailure());\r\n        });\r\n    };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  search_keywords: [],\r\n  search_results: undefined,\r\n  is_pending: false,\r\n};\r\n\r\nexport const searchReducer = (state = initialState, action) => {\r\n  const { type, results, keyword } = action;\r\n\r\n  switch (type) {\r\n    case types.SEARCH_PENDING:\r\n      return {\r\n        ...state,\r\n        is_pending: true,\r\n      };\r\n    case types.SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search_results: results,\r\n        isPending: false,\r\n      };\r\n    case types.SEARCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        search_results: \"no matches\",\r\n      };\r\n\r\n    case types.ADD_SEARCH_KEYWORD:\r\n      let copyKeywords = [...state.search_keywords];\r\n      copyKeywords.push(keyword);\r\n      return {\r\n        ...state,\r\n        search_keywords: copyKeywords,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n","const types = {\r\n  TOGGLE_FAVORITE: \"TOGGLE_FAVORITE\",\r\n  DELETE_FAVORITE: \"DELETE_FAVORITE\",\r\n};\r\n\r\nexport const actions = {\r\n  toggleFavorite: (photoJson) => {\r\n    return {\r\n      type: types.TOGGLE_FAVORITE,\r\n      photoJson: photoJson,\r\n    };\r\n  },\r\n\r\n  //currently not using\r\n  deleteFavorite: (photoID) => {\r\n    return {\r\n      type: types.DELETE_FAVORITE,\r\n      photoID: photoID,\r\n    };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  favoritesList: [],\r\n  total: 0,\r\n};\r\n\r\nexport const favoritesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.TOGGLE_FAVORITE: {\r\n      const isExisted = state.favoritesList.some((favoritesListItem) =>\r\n        compareFavoritesItem(favoritesListItem, action)\r\n      );\r\n      const likedPhoto = action.photoJson;\r\n      if (isExisted) {\r\n        delete likedPhoto.isLiked;\r\n        return Object.assign({}, state, {\r\n          favoritesList: state.favoritesList.filter(\r\n            (favoritesListItem) =>\r\n              !compareFavoritesItem(favoritesListItem, action)\r\n          ),\r\n        });\r\n      } else {\r\n        likedPhoto.isLiked = true;\r\n        return Object.assign({}, state, {\r\n          favoritesList: [...state.favoritesList, likedPhoto],\r\n        });\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst compareFavoritesItem = (favoritesItem, action) => {\r\n  return favoritesItem?.id === action.photoJson.id;\r\n};\r\n","import { UNAPI } from \"./../BLL/index\";\r\n\r\nconst types = {\r\n  FETCH_PHOTOS: \"FETCH_PHOTOS\",\r\n  FETCH_SUCCESS: \"FETCH_SUCCESS\",\r\n  FETCH_FAILURE: \"FETCH_FAILURE\",\r\n  FETCH_PENDING: \"FETCH_PENDING\",\r\n\r\n  SET_CURRENT_PHOTO: \"SET_CURRENT_PHOTO\",\r\n  SET_CURRENT_PHOTO_SUCCESS: \"SET_CURRENT_PHOTO_SUCCESS\",\r\n\r\n  GET_RELATED_PHOTOS: \"GET_RELATED_PHOTOS\",\r\n  GET_RELATED_PHOTOS_PENDING: \"GET_RELATED_PHOTOS_PENDING\",\r\n  GET_RELATED_PHOTOS_SUCCESS: \"GET_RELATED_PHOTOS_SUCCESS\",\r\n};\r\n\r\nexport const photoActions = {\r\n  fetchSuccess: (photos) => {\r\n    return { type: types.FETCH_SUCCESS, photos: photos };\r\n  },\r\n  setCurrentPhotoSuccess: (photo) => {\r\n    return { type: types.SET_CURRENT_PHOTO_SUCCESS, currentPhoto: photo };\r\n  },\r\n\r\n  fetchAllPhotos: () => {\r\n    return (dispatch) => {\r\n      UNAPI.photos()\r\n        .then((resp) => {\r\n          dispatch(photoActions.fetchSuccess(resp));\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n  },\r\n  setCurrentPhoto: (id) => {\r\n    return (dispatch) => {\r\n      UNAPI.getPhoto(id).then((json) => {\r\n        dispatch(photoActions.setCurrentPhotoSuccess(json),\r\n        dispatch(photoActions.getRelatedPhotos(json.alt_description))\r\n        );\r\n      });\r\n    };\r\n  },\r\n\r\n  getRelatedPhotos: (keyword) => {\r\n    return (dispatch) => {\r\n      dispatch(photoActions.getRelatedPhotosPending());\r\n      UNAPI.searchPhotos(keyword).then((response) => {\r\n        dispatch(photoActions.getRelatedPhotosSuccess(response.results));\r\n      });\r\n    };\r\n  },\r\n  getRelatedPhotosSuccess: (photos) => {\r\n    return { type: types.GET_RELATED_PHOTOS_SUCCESS, relatedPhotos: photos };\r\n  },\r\n  getRelatedPhotosPending: () => {\r\n    return { type: types.GET_RELATED_PHOTOS_PENDING };\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  //list of all photos on HomeScreen | array\r\n  allPhotos: undefined,\r\n  //a photo that user currently viewing on PhotosScreen | object\r\n  currentPhoto: undefined,\r\n  relatedPhotos: undefined,\r\n  isRelatedPhotosPending: true,\r\n};\r\nexport const photoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allPhotos: action.photos,\r\n      };\r\n\r\n    case types.SET_CURRENT_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPhoto: action.currentPhoto,\r\n      };\r\n\r\n    case types.GET_RELATED_PHOTOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        relatedPhotos: action.relatedPhotos,\r\n        isRelatedPhotosPending: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { searchReducer } from \"./searchReducer\";\r\nimport { favoritesReducer } from \"./favoritesReducer\";\r\nimport { photoReducer } from \"./photoReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  search: searchReducer,\r\n  favorites: favoritesReducer,\r\n  photos: photoReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport let Store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport './textListItem.css'\r\n\r\nconst TextListItem = ({ itemTitle }) => {\r\n  return <span>{itemTitle}</span>;\r\n};\r\n\r\nexport default TextListItem;\r\n","import React from \"react\";\r\nimport TextListItem from \"./../TextListItem/TextListItem\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default class HorizontalTextList extends React.PureComponent {\r\n  render() {\r\n      console.log('H TEXT LIST', this.props);\r\n    return (\r\n      <div>\r\n        {this.props.data\r\n          ? this.props.data.map(item => (\r\n              <TextListItem itemTitle={item} />\r\n            ))\r\n          : \"Ничего нет\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./searchHeader.css\";\r\nimport { UNAPI } from \"../BLL/index\";\r\n\r\nimport HeaderListItem from \"./HeaderListItem\";\r\nimport { searchActions } from \"../redux/searchReducer\";\r\nimport HorizontalTextList from \"../components/Lists/HorizontalTextList\";\r\n\r\nclass SearchHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collectionsList: undefined,\r\n      searchKeyword: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UNAPI.listCollections().then(json => {\r\n      const titles = json.map(item => {\r\n        return item.title;\r\n      });\r\n      this.setState({ collectionsList: titles });\r\n    });\r\n  }\r\n\r\n  viewCollection() {\r\n    //TODO:навигируем на <CollectionPhotoList />;\r\n    // и прокидываем туда пропс с json объектом\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-header-wrapper container-fluid\">\r\n        {/* <form action=\"submit\"> */}\r\n        <input\r\n          className=\"search-text-input\"\r\n          type=\"text\"\r\n          placeholder=\"Исследуй\"\r\n          onChange={event => {\r\n            this.setState({ searchKeyword: event.target.value });\r\n          }}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            this.props.doSearch(this.state.searchKeyword);\r\n          }}\r\n        >\r\n          поиск\r\n        </button>\r\n        {/* </form> */}\r\n        <hr size=\"10\" color=\"white\" width=\"80%\" />\r\n        <div className=\"collections-list\">\r\n          {/* //TODO: сюда не прокидываются пропсы \r\n          так как рендер идет раньше чем делается \r\n          запрос на сервер в componentDidMount*/}\r\n          <HorizontalTextList data={this.state.collectionsList} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    search_results: state.search.search_results,\r\n    is_pending: state.search.is_pending\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    doSearch: keyword => {\r\n      dispatch(searchActions.doSearch(keyword));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchHeader);\r\n","import {\r\n  faDownload,\r\n  faExpand,\r\n  faHeart,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { UNAPI } from \"./../../BLL/index\";\r\nimport \"./cardOverlayStyle.css\";\r\nimport { actions } from \"../../redux/favoritesReducer\";\r\nimport { photoActions } from \"./../../redux/photoReducer\";\r\n\r\nclass CardOverlay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLiked: this.props.json.isLiked,\r\n    };\r\n  }\r\n\r\n  onViewPhoto() {\r\n    const id = this.props.json.id;\r\n    this.props.viewPhoto(id);\r\n  }\r\n\r\n  render() {\r\n    let isLiked = this.props.json?.isLiked;\r\n    const user = this.props.json.user;\r\n    return (\r\n      <div className=\"card-overlay\">\r\n        <div className=\"profile-info\">\r\n          <img\r\n            src={user.profile_image.medium}\r\n            className=\"profile-photo\"\r\n            alt=\"profile\"\r\n          />\r\n          <div className=\"profile-info-name\">\r\n            <span>@{user.instagram_username}</span>\r\n            <span>{user.name}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"information-buttons\">\r\n          <button\r\n            className=\"information-button\"\r\n            style={isLiked ? { color: \"red\" } : { color: \"white\" }}\r\n            onClick={() => {\r\n              this.props.toggleFavorite(this.props.json);\r\n            }}\r\n          >\r\n            <FontAwesomeIcon className=\"information-icon\" icon={faHeart} />\r\n          </button>\r\n          <Link\r\n            to=\"/photo\"\r\n            className=\"information-button\"\r\n            onClick={this.onViewPhoto.bind(this)}\r\n          >\r\n            <FontAwesomeIcon className=\"information-icon\" icon={faExpand} />\r\n          </Link>\r\n          <button\r\n            className=\"information-button\"\r\n            onClick={() => {\r\n              UNAPI.download(this.props.json);\r\n            }}\r\n          >\r\n            <FontAwesomeIcon className=\"information-icon\" icon={faDownload} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleFavorite: (json) => {\r\n      dispatch(actions.toggleFavorite(json));\r\n    },\r\n    viewPhoto: (id) => {\r\n      dispatch(photoActions.setCurrentPhoto(id));\r\n    },\r\n  };\r\n};\r\nconst mapState = (state) => {\r\n  return {\r\n    favoritesList: state.favorites.favoritesList,\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatchToProps)(CardOverlay);\r\n","import React from \"react\";\r\nimport CardOverlay from \"./CardOverlay\";\r\nimport \"./cardStyle.css\";\r\n\r\nconst Card = ({ src, altDesc, json }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={src} alt={altDesc} className=\"image\" />\r\n      <div className=\"information-overlay\">\r\n        <CardOverlay json={json} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../Card/Card.jsx\";\r\nimport \"./cardListStyle.css\";\r\n\r\nclass CardList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"root\">\r\n        {this.props.data\r\n          ? this.props.data.map(item => (\r\n              <Card\r\n                src={item.urls.small}\r\n                altDesc={item.alt_description}\r\n                json={item}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchHeader from \"./SearchHeader\";\r\nimport CardList from \"./../components/Lists/CardList\";\r\n\r\nclass SearchResultsScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search_results: undefined,\r\n    };\r\n  }\r\n  static getDerivedStateFromProps(props) {\r\n    return { search_results: props.search_results };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //TODO: обнуление результатов поиска\r\n    this.state.search_results = undefined;\r\n    console.log(\"UNMOUNTING\", this.state.search_results);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchHeader />\r\n        {<CardList data={this.state.search_results} /> || \"Результатов нет\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    search_results: state.search.search_results,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(SearchResultsScreen);\r\n","import React from \"react\";\r\nimport CardList from \"../components/Lists/CardList\";\r\nimport { connect } from \"react-redux\";\r\nimport { photoActions } from \"./../redux/photoReducer\";\r\n\r\nclass HomeScreen extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllPhotos();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>{<CardList data={this.props.allPhotos} /> || \"ничего нет\"}</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  console.log(\"STATE\", state);\r\n  return {\r\n    allPhotos: state.photos.allPhotos,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchAllPhotos: () => {\r\n      dispatch(photoActions.fetchAllPhotos());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(HomeScreen);\r\n","import React from \"react\";\r\nimport HorizontalTextList from \"./../components/Lists/HorizontalTextList\";\r\nimport \"./historyHeader.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SearchHistoryHeader = ({search_history_list}) => {\r\n  return (\r\n    <div className=\"history-header-wrapper\">\r\n      <span className=\"yourQuerys\">Ваши запросы</span>\r\n      <HorizontalTextList data={search_history_list} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    search_history_list: state.search.search_keywords,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchHistoryHeader);\r\n","import React from \"react\";\r\nimport HorizontalTextList from \"./../components/Lists/HorizontalTextList\";\r\nimport SearchHistoryHeader from \"./SearchHistoryHeader\";\r\n\r\nexport default class SearchHistoryScreen extends React.Component {\r\n  render() {\r\n    return <SearchHistoryHeader />\r\n  }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CardList from \"./../components/Lists/CardList\";\r\n\r\nconst FavoritesScreen = ({ favoritesList }) => {\r\n  return <CardList data={favoritesList} />;\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return { favoritesList: state.favorites.favoritesList };\r\n};\r\n\r\nexport default connect(mapState)(FavoritesScreen);\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./PhotosScreen.module.css\";\r\nimport { photoActions } from \"./../redux/photoReducer\";\r\nimport CardList from \"./../components/Lists/CardList\";\r\n\r\nconst photoPlaceholder =\r\n  \"https://images.unsplash.com/photo-1587013258002-b57e3cb17dea?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzk3N30\";\r\n\r\nconst userProfilePlacehoder =\r\n  \"https://images.unsplash.com/profile-fb-1546918339-0cab0a15f6d6.jpg?ixlib=rb-1.2.1&q=80&fm=jpg&crop=faces&cs=tinysrgb&fit=crop&h=128&w=128\";\r\n\r\nclass PhotosScreen extends React.Component {\r\n  tagList(tags) {\r\n    return (\r\n      <div className={styles.relatedTags}>\r\n        <span>Похожие теги</span>\r\n        <div>\r\n          {tags ? (\r\n            tags.map((tag) => {\r\n              return (\r\n                <span style={{ display: \"flexbox\", width: \"fit-content\" }}>\r\n                  {tag.title}\r\n                </span>\r\n              );\r\n            })\r\n          ) : (\r\n            <h2>Грузимся</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  relatedPhotos(data) {\r\n    return <CardList data={data} />;\r\n  }\r\n  render() {\r\n    console.log(\"PHOTOS SCREEN\", this.props.currentPhoto);\r\n    const json = this.props.currentPhoto;\r\n    const user = json?.user;\r\n    return (\r\n      <div className={styles.photosScreenWrapper}>\r\n        <div className={styles.photosScreenBackground}>\r\n          <img src={json?.urls?.regular} alt=\"beautyful background\" />\r\n        </div>\r\n\r\n        <section className={styles.photosScreenOverlay}>\r\n          <div className={styles.photoUpperButtons}>\r\n            <div className={styles.profileInfo}>\r\n              <img\r\n                className={styles.profilePhoto}\r\n                src={user?.profile_image.medium}\r\n                alt=\"profile avatar\"\r\n              />\r\n              <div className={styles.profileText}>\r\n                <h1 className={styles.profileName}>{user?.username}</h1>\r\n                <span className={styles.profileLink}>\r\n                  @{user?.instagram_username}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.upperButtons}>\r\n              <button className={styles.upperButtonsHeart}>\r\n                <FontAwesomeIcon color=\"#828282\" icon={faHeart} />\r\n              </button>\r\n              <button className={styles.upperButtonsDownload}>Скачать</button>\r\n            </div>\r\n          </div>\r\n          <img className={styles.photo} src={json?.urls?.regular} alt=\".\" />\r\n          {this.tagList(json?.tags)}\r\n        </section>\r\n\r\n        <section>\r\n          <h2>Похожие фотографии</h2>\r\n          {this.relatedPhotos(this.props.relatedPhotos)}\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    currentPhoto: state.photos.currentPhoto,\r\n    relatedPhotos: state.photos.relatedPhotos,\r\n    isRelatedPhotosPending: state.photos.isRelatedPhotosPending,\r\n  };\r\n};\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    getRelatedPhotos: (keyword) =>\r\n      dispatch(photoActions.getRelatedPhotos(keyword)),\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(PhotosScreen);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SearchResultsScreen from \"../SearchScreen/SearchResultsScreen\";\r\nimport HomeScreen from \"./../HomeScreen/HomeScreen\";\r\nimport SearchHistoryScreen from \"../SearchHistoryScreen/SearchHistoryScreen\";\r\nimport FavoritesScreen from \"./../FavoritesScreen/FavoritesScreen\";\r\nimport PhotosScreen from \"../PhotosScreen/PhotosScreen\";\r\n\r\nexport default class RootRouter extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/search\">\r\n          <SearchResultsScreen />\r\n        </Route>\r\n        <Route path=\"/history\">\r\n          <SearchHistoryScreen />\r\n        </Route>\r\n        <Route path=\"/favorites\">\r\n          <FavoritesScreen />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <HomeScreen />\r\n        </Route>\r\n        <Route path=\"/photo\">\r\n          <PhotosScreen />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport AppHeader from \"./components/AppHeader/AppHeader\";\r\nimport { Store } from \"./redux/store\";\r\nimport RootRouter from \"./navigation/RootRouter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={Store}>\r\n      <HashRouter >\r\n        <div className=\"header\">\r\n          <AppHeader />\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <RootRouter />\r\n          <div className=\"manifesto\">\r\n            <span>2020</span>\r\n            <a href=\"https://youtu.be/A0FZIwabctw\" title=\"Узнать что это значит\" target='blank'>\r\n              ⁕Made on Earth for Humans⁕\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photosScreenWrapper\":\"PhotosScreen_photosScreenWrapper__1AKTW\",\"photosScreenBackground\":\"PhotosScreen_photosScreenBackground__3dWyu\",\"photosScreenOverlay\":\"PhotosScreen_photosScreenOverlay__3pigU\",\"photo\":\"PhotosScreen_photo__1ExPw\",\"profileInfo\":\"PhotosScreen_profileInfo__464e3\",\"profilePhoto\":\"PhotosScreen_profilePhoto__1SZpd\",\"profileName\":\"PhotosScreen_profileName__1NO5V\",\"photoUpperButtons\":\"PhotosScreen_photoUpperButtons__MAGEE\",\"upperButtonsDownload\":\"PhotosScreen_upperButtonsDownload__10wsA\",\"upperButtons\":\"PhotosScreen_upperButtons__3vZ4i\",\"upperButtonsHeart\":\"PhotosScreen_upperButtonsHeart__3jnSg\",\"relatedTags\":\"PhotosScreen_relatedTags__xBPyG\"};"],"sourceRoot":""}